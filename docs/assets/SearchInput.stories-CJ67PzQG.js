import{j as t}from"./jsx-runtime-Be5KepTg.js";import{S as u}from"./SearchRounded-D1EKSe9L.js";import{T as l}from"./TextInput-C8rNGnDJ.js";import{u as d}from"./TranslationProvider-CUEHlEwt.js";import{I as h}from"./IconButton-oFMZwzrL.js";import{G as g}from"./global.styles-BTXDQl3G.js";import{C as E}from"./ThemeProvider-D_IVFJ-Y.js";import"./index-Cu3ntQMU.js";import"./styled-components-DZLBgmQk.js";import"./createTheme-B4pomYAW.js";import"./index-BsICj7Do.js";import"./createSvgIcon-KzkT8T21.js";import"./useSlot-MqmgmX97.js";import"./DefaultPropsProvider-BB0hjY0t.js";import"./index-cfNomcto.js";import"./index-DYvH7Hsd.js";import"./useFormControl-BFGBx6La.js";import"./formControlState-Dq1zat_P.js";import"./createSimplePaletteValueFilter-Dp9otNH8.js";import"./index-Dpg-LJl0.js";import"./Popover-IETx_Mw0.js";import"./Grow-DTwrS1bI.js";import"./Paper-BScAZJYj.js";import"./useControlled-DNjoTknX.js";import"./ButtonBase-BiPgteYm.js";import"./CircularProgress-C1zYHYrT.js";import"./Theme-D4T0JIIw.js";const m=({onSearchSubmit:e,searchText:i,handleSearchChange:c})=>{const{t:p}=d();return t.jsx("form",{onSubmit:e,children:t.jsx(l,{label:p("general.search_placeholder"),type:"text",size:"small",value:i,onChange:c,icon:t.jsx(h,{onClick:e,children:t.jsx(u,{})})})})};m.__docgenInfo={description:"",methods:[],displayName:"SearchInput",props:{onSearchSubmit:{required:!0,tsType:{name:"signature",type:"function",raw:`(
  event: React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement>,
) => void`,signature:{arguments:[{type:{name:"union",raw:"React.FormEvent<HTMLFormElement> | React.MouseEvent<HTMLButtonElement>",elements:[{name:"ReactFormEvent",raw:"React.FormEvent<HTMLFormElement>",elements:[{name:"HTMLFormElement"}]},{name:"ReactMouseEvent",raw:"React.MouseEvent<HTMLButtonElement>",elements:[{name:"HTMLButtonElement"}]}]},name:"event"}],return:{name:"void"}}},description:""},searchText:{required:!0,tsType:{name:"string"},description:""},handleSearchChange:{required:!0,tsType:{name:"signature",type:"function",raw:"(event: React.ChangeEvent<HTMLInputElement>) => void",signature:{arguments:[{type:{name:"ReactChangeEvent",raw:"React.ChangeEvent<HTMLInputElement>",elements:[{name:"HTMLInputElement"}]},name:"event"}],return:{name:"void"}}},description:""}}};const s={onSearchSubmit:e=>{e.preventDefault(),console.log("Search submitted")},handleSearchChange:e=>{console.log("Search changed:",e.target.value)},t:e=>e},J={title:"Components/SearchInput",component:m,tags:["autodocs"],decorators:[e=>t.jsxs(E,{children:[t.jsx(g,{}),t.jsx(e,{})]})],parameters:{layout:"centered"},args:{searchText:"",...s}},n={args:{searchText:"",...s}};var r,o,a;n.parameters={...n.parameters,docs:{...(r=n.parameters)==null?void 0:r.docs,source:{originalSource:`{
  args: {
    searchText: '',
    ...mockFunctions
  }
}`,...(a=(o=n.parameters)==null?void 0:o.docs)==null?void 0:a.source}}};const K=["Default"];export{n as Default,K as __namedExportsOrder,J as default};
