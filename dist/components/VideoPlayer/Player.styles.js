var __makeTemplateObject = (this && this.__makeTemplateObject) || function (cooked, raw) {
    if (Object.defineProperty) { Object.defineProperty(cooked, "raw", { value: raw }); } else { cooked.raw = raw; }
    return cooked;
};
import styled, { keyframes } from 'styled-components';
export var StyledVideoPlayerWrapper = styled.div(templateObject_1 || (templateObject_1 = __makeTemplateObject(["\n  cursor: pointer;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > .react-player {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    border-radius: 8px;\n    height: 50%;\n\n    & > video {\n      height: fit-content;\n      width: 100%;\n      object-fit: contain;\n      border-radius: 8px;\n      background-color: var(--neutral-colors-dark);\n    }\n  }\n"], ["\n  cursor: pointer;\n  border-radius: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  & > .react-player {\n    position: absolute;\n    top: 0;\n    left: 0;\n    height: 100%;\n    width: 100%;\n    border-radius: 8px;\n    height: 50%;\n\n    & > video {\n      height: fit-content;\n      width: 100%;\n      object-fit: contain;\n      border-radius: 8px;\n      background-color: var(--neutral-colors-dark);\n    }\n  }\n"])));
export var StyledWrapper = styled.div(templateObject_2 || (templateObject_2 = __makeTemplateObject(["\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    display: block;\n    padding-top: 56.25%;\n  }\n\n  & > ", " {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n"], ["\n  position: relative;\n  z-index: 1;\n  width: 100%;\n  border-radius: 8px;\n  overflow: hidden;\n\n  &::before {\n    content: '';\n    display: block;\n    padding-top: 56.25%;\n  }\n\n  & > ", " {\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n  }\n"])), StyledVideoPlayerWrapper);
export var StyledPlayerLoader = styled.div(templateObject_3 || (templateObject_3 = __makeTemplateObject(["\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 8px;\n  background: #e7e9ed;\n  display: flex;\n  align-items: center;\n  top: 0;\n  bottom: 0;\n  margin: auto 0;\n  color: var(--neutral-colors-light);\n  justify-content: center;\n  z-index: 5;\n"], ["\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  border-radius: 8px;\n  background: #e7e9ed;\n  display: flex;\n  align-items: center;\n  top: 0;\n  bottom: 0;\n  margin: auto 0;\n  color: var(--neutral-colors-light);\n  justify-content: center;\n  z-index: 5;\n"])));
var rotate = keyframes(templateObject_4 || (templateObject_4 = __makeTemplateObject(["\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n"], ["\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n"])));
export var StyledLoader = styled.div(templateObject_5 || (templateObject_5 = __makeTemplateObject(["\n  margin: 60px auto;\n  font-size: 10px;\n  position: relative;\n  text-indent: -9999em;\n  border-top: 3px solid var(--neutral-colors-light);\n  border-right: 3px solid var(--neutral-colors-light);\n  border-bottom: 3px solid var(--neutral-colors-light);\n  border-left: 3px solid var(--brand-colors-accent);\n  transform: translateZ(0);\n  animation: ", " 1.1s infinite linear;\n  border-radius: 50%;\n  width: 46px;\n  height: 46px;\n\n  &:after {\n    border-radius: 50%;\n    width: 46px;\n    height: 46px;\n  }\n"], ["\n  margin: 60px auto;\n  font-size: 10px;\n  position: relative;\n  text-indent: -9999em;\n  border-top: 3px solid var(--neutral-colors-light);\n  border-right: 3px solid var(--neutral-colors-light);\n  border-bottom: 3px solid var(--neutral-colors-light);\n  border-left: 3px solid var(--brand-colors-accent);\n  transform: translateZ(0);\n  animation: ", " 1.1s infinite linear;\n  border-radius: 50%;\n  width: 46px;\n  height: 46px;\n\n  &:after {\n    border-radius: 50%;\n    width: 46px;\n    height: 46px;\n  }\n"])), rotate);
export var StyledControlsContainer = styled.div(templateObject_6 || (templateObject_6 = __makeTemplateObject(["\n  width: 100%;\n  height: fit-content;\n  display: flex;\n  align-items: flex-end;\n  position: absolute;\n  flex-direction: column;\n  left: 0;\n  bottom: 0;\n  z-index: 2;\n"], ["\n  width: 100%;\n  height: fit-content;\n  display: flex;\n  align-items: flex-end;\n  position: absolute;\n  flex-direction: column;\n  left: 0;\n  bottom: 0;\n  z-index: 2;\n"])));
export var StyledSubtitles = styled.div(templateObject_7 || (templateObject_7 = __makeTemplateObject(["\n  background-color: rgba(2, 2, 16, 0.32);\n  color: #fff;\n  font-family: 'Open Sans', sans-serif;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 150%;\n  padding: 8px;\n  position: absolute;\n  z-index: 100;\n  bottom: ", ";\n  right: 0;\n  left: 0;\n  width: fit-content;\n  margin: 0 auto;\n  max-width: 80%;\n  width: fit-content;\n"], ["\n  background-color: rgba(2, 2, 16, 0.32);\n  color: #fff;\n  font-family: 'Open Sans', sans-serif;\n  font-size: 18px;\n  font-style: normal;\n  font-weight: 400;\n  line-height: 150%;\n  padding: 8px;\n  position: absolute;\n  z-index: 100;\n  bottom: ", ";\n  right: 0;\n  left: 0;\n  width: fit-content;\n  margin: 0 auto;\n  max-width: 80%;\n  width: fit-content;\n"])), function (_a) {
    var $controls = _a.$controls;
    return ($controls ? '60px' : '10px');
});
export var HLS_SUBTITLE_STYLES = "\n  /* Hide native HLS subtitles completely - comprehensive approach */\n  video::cue {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  video::-webkit-media-text-track-display {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  video::cue-region {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  video::-webkit-media-text-track-container {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  /* Target ReactPlayer specifically */\n  .react-player video::cue {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  .react-player video::-webkit-media-text-track-display {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  .react-player video::cue-region {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  .react-player video::-webkit-media-text-track-container {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  /* Additional selectors for different browsers */\n  video::-moz-media-text-track-display {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  video::-ms-media-text-track-display {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  /* Hide any subtitle overlays */\n  .react-player video + div[style*=\"position: absolute\"] {\n    display: none !important;\n  }\n  \n  /* Target HLS video player specifically */\n  .hls-video-player::cue {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  .hls-video-player::-webkit-media-text-track-display {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  .hls-video-player::-webkit-media-text-track-container {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n  \n  .hls-video-player::cue-region {\n    display: none !important;\n    visibility: hidden !important;\n    opacity: 0 !important;\n  }\n";
export var injectHLSSubtitleStyles = function () {
    var addSubtitleStyles = function () {
        var existingStyle = document.getElementById('hls-subtitle-styles');
        if (existingStyle) {
            existingStyle.remove();
        }
        var style = document.createElement('style');
        style.id = 'hls-subtitle-styles';
        style.textContent = HLS_SUBTITLE_STYLES;
        document.head.appendChild(style);
    };
    addSubtitleStyles();
    // Return cleanup function
    return function () {
        var existingStyle = document.getElementById('hls-subtitle-styles');
        if (existingStyle) {
            existingStyle.remove();
        }
    };
};
var templateObject_1, templateObject_2, templateObject_3, templateObject_4, templateObject_5, templateObject_6, templateObject_7;
//# sourceMappingURL=Player.styles.js.map